<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.eduservice.mapper.EduCourseMapper">
<!--   做查询 参数类型可以省略，但是返回对象不可省略哦~，下面代码就可以自动生成啦,如果一个参数，随便写参数的值-->
    <select id="getPublishCourseInfo" resultType="com.atguigu.eduservice.entity.vo.CoursePublishVo">
        select ec.id,ec.title,ec.price,ec.lesson_num as lessonNum,ec.cover,
        et.name as teacherName,
        es1.title as subjectLevelOne,
        es2.title as subjectLevelTwo
        from edu_course ec left outer join edu_course_description ecd on ec.id=ecd.id
                           left outer join edu_teacher et on ec.teacher_id=et.id
                           left outer join edu_subject es1 on ec.subject_parent_id=es1.id
                           left outer join edu_subject es2 on ec.subject_id=es2.id
                 where ec.id=#{courseId}
    </select>

<!--    根据课程id查询课程的基本信息                        这里从com开始，不需要分号的~~-->
    <select id="getBaseCourseInfo" resultType="com.atguigu.eduservice.entity.frontvo.CourseWebVo">

        SELECT ec.id,ec.title,ec.price,ec.lesson_num AS lessonNum,ec.cover,
               ec.buy_count AS buyCount,ec.view_count AS viewCount,
               ecd.description,
               et.id AS teacherId,et.name AS teacherName,et.intro,et.avatar,
               es1.id AS subjectLevelOneId,es1.title AS subjectLevelOne,
               es2.id AS subjectLevelTwoId,es2.title AS subjectLevelTwo
      FROM edu_course ec LEFT OUTER JOIN edu_course_description ecd ON ec.id=ecd.id
                    LEFT OUTER JOIN edu_teacher et ON ec.teacher_id=et.id
                    LEFT OUTER JOIN edu_subject es1 ON ec.subject_parent_id=es1.id
		            LEFT OUTER JOIN edu_subject es2 ON ec.subject_id=es2.id
        WHERE ec.id=#{courseId}

    </select>
</mapper>
